div#help-dialog.modal.hide.fade
  div.modal-header
    button.close(data-dismiss='modal') &times;
    h3 WKTool Help
  div#help-contents.navbar.navbar-static
    div.navbar-inner
      ul.nav
        li 
          a(href="#wccs-help") WCCS 
        li 
          a(href="#wctl-help") WCTL 
        li 
          a(href="#about-help") About 
  //(data-spy='scroll', data-target='#help-contents',data-offset='0')
  div.modal-body 
    p.
      WKTool is a verification tool for weighted Kripke structures.
    p.
      Models are defined using WCCS syntax or WKS/DOT syntax in the upper input area. 
      Properties are entered as WCTL expressions and can be edited and verified in the lower 
      section of the interface.
    // WCCS syntax
    a#wccs-help
    h4 WCCS Syntax Reference
    p.
      The table listed below contains the available WCCS expressions along with their syntax.
    table.table.table-bordered
      thead
        tr
          th Expression
          th Syntax
      tobody
        tr
          td Process Definition
          td 
            code M := P;
        tr
          td Channel Prefix
          td 
            code &lt;c,k&gt;.P
            |&nbsp; or 
            code &lt;c,k&gt;.P
            |&nbsp;or 
            code &lt;c&gt;.P
        tr
          td Atomic Label
          td 
            code a:P
        tr
          td Parallel Composition
          td 
            code P | Q
        tr
          td Choice
          td 
            code P + Q
        tr
          td Restriction
          td 
            code P \ {c}
            |&nbsp;or 
            code P \ {c1, c2, ...}
        tr
          td Renaming
          td 
            code P [a1 => a2, ...]
            |&nbsp;or 
            code P [c1 -> c2, ...]
        tr
          td Empty Process
          td 
            code 0
    // WCTL syntax
    a#wctl-help
    h4 WCTL Syntax Reference
    p.
      The following table lists the available WCTL expressions and their syntax.
    p
      | Atoms are denoted by 
      code a
      | , boolean expressions by 
      code expr
      |, positive integers by 
      code k
      |&nbsp;and arithmetic expressions by 
      code o
      |.
    table.table.table-bordered
      thead
        tr
          th Expression
          th Syntax
      tobody
	    tr
          td Boolean
          td 
            code True
			code False
        tr
          td Atomic Proposition
          td 
            code a
        tr
          td Conjunction
          td 
            code expr1 && expr2
        tr
          td Disjunction
          td 
            code expr1 || expr2
        tr
          td Universal Until
          td 
            code A expr1 U[k] expr2
            |&nbsp;or 
            code A expr1 U expr2
        tr
          td Existential Until
          td 
            code E expr1 U[k] expr2
            |&nbsp;or 
            code E expr1 U expr2
        tr
          td Universal Next
          td 
            code AX[k] expr
            |&nbsp;or 
            code AX expr
        tr
          td Existential Next
          td 
            code EX[k] expr
            |&nbsp;or 
            code EX expr
        tr
          td Comparison
          td 
            code o1 ~ o2
            |&nbsp;, where 
            code ~ = {<,<=,==,!=,>=,>}
        tr
          td Arithmetic expression
          td 
            code o1 ± o2
            |&nbsp;, where 
            code ± = {*,+,-,/,^}
            |&nbsp;and 
            code oi = {a, k}
    a#about-help
    h4 About
    p ...
    h5 Source Code
    p The source code is hosted on 
      a(href='https://github.com/jonasfj/WKTool') GitHub
      .
  div.modal-footer
    button.btn(data-dismiss='modal') Close